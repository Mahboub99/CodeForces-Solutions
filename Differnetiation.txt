#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <string>
#include <set>
#include <math.h>

using namespace std;

int main()
{
	string s;
	vector<char> signs;
	cin >> s;
	bool *onlyX = new bool [s.length()];
	for (int i = 0; i < s.length(); i++) onlyX[i] = 0;
	if (s.find('x') == string::npos)
	{
		cout << "0";
		return 0;
	}
	vector<string> WOS(s.size());
	int i = 0, j = 0, Xsign;
	if (s[0] == '-') i = 1;
	for (i; i < s.length(); i++)
	{
		if (s[i] == '+' || s[i] == '-')
		{
			signs.push_back(s[i]);
			j++;
		}
		else
			WOS[j] += s[i];
		if (WOS[j] == "x" && j != 0)
			Xsign = i - 1;
	}
	for (int i = 0; i < WOS.size() && WOS[i] != ""; i++)
	{
		if (WOS[i] == "x")
		{	
			if (i == 0 && s[0] == '-')
				WOS[i] = "-1";
			else if(i != 0 && s[Xsign] == '-')
				WOS[i] = "-1";
			else 
				WOS[i] = "1";
			onlyX[i] = true;
			continue;
		}
		bool Xflag = false;
		string aft = "", prev = "";
		int j = 0;
		while (j < WOS[i].length() && WOS[i][j] != 'x')
		{
			prev += WOS[i][j++];
			if (WOS[i][j] == 'x')
				Xflag = true;
		}
		j++;
		while (j < WOS[i].length() && WOS[i][j] != 'x')
		{
			aft += WOS[i][j++];
		}
		if (prev == "")
			prev = "1";
		if (aft == "" && Xflag == false)
		{
			aft = "0";
			WOS[i] = "";
			continue;
		}
		else if (aft == "" && Xflag == true)
			aft = "1";
		prev = to_string(stoi(prev) * stoi(aft));
		aft = to_string(stoi(aft) - 1);
		if (aft == "0")
			WOS[i] = prev;
		else if (aft == "1")
			WOS[i] = prev + 'x';
		else 
			WOS[i] = prev + 'x' + aft;
	}
	j = 0;

	for (i = 0; i < WOS.size(); i++)
	{
		if (WOS[i] == "-1")
		{
			cout << WOS[i];
			continue;
		}
		if (WOS[i] != "")
		{
			if (s[0] == '-' && !i && !onlyX[i])
				cout << '-';
			else if(i)
				cout << signs[j++];
			if (WOS[i] != "0" || onlyX)
				cout << WOS[i];
		}
	}
	return 0;
}